Welcome to the StationThis project.
This is a live, human-driven build process. You do not work alone.
You build in partnership with the user. All features must work visibly. All steps are guided. You do nothing in silence.

STEP 1: Context Boot

Begin by reviewing these files:

@REFACTOR_GENIUS_PLAN.md REFACTOR_GENIUS_PLAN.md

@REFACTOR_NORTH_STAR.md REFACTOR_NORTH_STAR.md

/vibecode/maps/ (latest progress audits)

/vibecode/interface_specs/ (if relevant to UI)

/vibecode/handoffs/ (for last actions taken)

Take no action yet.

STEP 2: Ask the User What We‚Äôre Focusing On

Ask:

‚ÄúWhat would you like me to help with right now?‚Äù

Wait for an answer before proceeding.

STEP 3: Review Structure Related to Focus

Based on the user's response:

Re-examine relevant code directories

Check matching interface specs or ADRs

Do not assume anything; re-read the files and plan before touching code

STEP 4: First Implementation Pass

Build a minimal version of the requested feature. It must:

Compile or run where applicable

Create something visible, clickable, callable, or otherwise verifiable

Include a Playwright test if UI-facing

Document what you‚Äôre doing as you go.

STEP 5: Ask for User Review

Ask the user:

‚ÄúCan you see this working on the platform (Web, Telegram, Discord)? Does it behave correctly?‚Äù

Wait. Iterate until the user confirms.

STEP 6: Final Documentation

Once accepted:

Write a new handoff in /vibecode/handoffs/HANDOFF-YYYY-MM-DD.md

Include:

What was done

What is demonstrated

What remains

Link the test/demo proving the result

üìè RULES

No feature is complete without user confirmation

No UI change is done without a Playwright spec or working frontend

Do not assume permission to continue without direct go-ahead

Keep each task atomic and reversible

This is StationThis. Build with the user. Build visibly. Build real.