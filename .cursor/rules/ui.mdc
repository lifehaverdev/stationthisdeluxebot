---
description: 
globs: 
alwaysApply: true
---
## Rule: UI System (ui-system.mdc)

### Purpose
To enforce platform-agnostic UI rendering and consistent component structure.

### Rules

1. **All UI must implement `UIComponent` interface**
   - Base: `src/core/ui/interfaces/UIComponent.js`
   - Components include `TextComponent`, `ButtonComponent`, `InputComponent`

2. **Use the `UIManager` to manage and compose components**
   - Create with `createUIManager()`
   - Add components with factory functions (e.g., `createTextComponent()`)

3. **Rendering is handled by platform-specific renderers**
   - Telegram: `src/integrations/telegram/renderers/`
   - Web: `src/core/ui/web/`
   - Do not hardcode any platform logic into components

4. **Menus and layouts must be composed dynamically**
   - Avoid static inline keyboards or hardcoded layouts
   - Use pagination, navigation buttons, and context-aware rendering

5. **UI is decoupled from workflows and services**
   - UI receives data from workflows or session
   - Rendering does not trigger business logic directly

---

Use this rule when building or updating menus, messages, and prompts across all platforms.

