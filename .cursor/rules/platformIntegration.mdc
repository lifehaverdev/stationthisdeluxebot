---
description: 
globs: 
alwaysApply: true
---
## Rule: Platform Integration (platform-integration.mdc)

### Purpose
To define how external platforms (e.g. Telegram, Web, CLI) integrate with the internal system via adapters.

### Rules

1. **Platform-specific logic must be isolated**
   - Telegram logic lives in `src/integrations/telegram/`
   - Web logic lives in `src/integrations/web/` (if applicable)
   - CLI/Other platforms follow the same adapter pattern

2. **No platform logic in core workflows, services, or UI components**
   - Do not call `bot.sendMessage()` or similar from core logic
   - Platform adapters must be the only layer that talks to platform APIs

3. **Use adapters to map platform inputs to internal actions**
   - Telegram: Handle updates and messages in `commandHandler.js`, route to workflows or services
   - Use platform-specific `renderers/` to convert internal UI into native format (e.g., inline keyboards)

4. **All rendering must go through the platform renderer**
   - Do not inline Telegram UI (e.g. keyboards, replies)
   - Use `editTelegramMenu()`, `sendTelegramMessage()`, etc.

5. **Platform entry points must initialize session context**
   - Always initialize or refresh the session before routing input
   - Use `getOrCreateSession()` or adapter-specific session entry

---

Use this rule when extending support for a new platform, adding input handling, or customizing UI output per platform.

