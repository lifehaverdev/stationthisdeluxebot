---
description: 
globs: 
alwaysApply: true
---
## Rule: Session Management (session-management.mdc)

### Purpose
To define the architecture and usage rules for user sessions across platforms.

### Rules

1. **All user context must pass through the Session Service**
   - File: `src/core/session/service.js`
   - Use `getOrCreateSession()` to safely initialize and access session state.

2. **Immutable session models only**
   - `SessionState` is immutable and must not be directly mutated.
   - Use provided helpers like `addClientConnection()`, `setActiveClient()`, etc.

3. **Platform-specific sessions must use adapters**
   - Telegram: `createFromLobby()`
   - Web: `createWebSession()`
   - API/CLI: Use appropriate session constructor wrappers.

4. **Session lifecycle must be maintained**
   - Begin with `createSession()`
   - End with `endSession()` or `cleanupExpiredSessions()`
   - Do not leave orphan sessions in memory.

5. **API keys and connection tracking is part of the session**
   - Use `generateApiKey()`, `revokeApiKey()` as part of authenticated workflows.

---

Use this file when writing workflows or UI that requires user state, and when developing platform adapters.

