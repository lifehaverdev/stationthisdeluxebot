---
description: 
globs: 
alwaysApply: false
---
 # üß∞ AGENT TASK: FIX COMFYUIDEPLOY WORKFLOW PARAMETER PIPELINE

## üìù Problem Statement

The current implementation in our codebase fails to properly preserve user input parameters when a workflow is configured via the web frontend and sent through the ComfyUIDeploy service. Analysis shows that while the frontend correctly collects inputs and sends them to the backend, the parameters are being lost or overwritten during processing.

## üîé Issue Identification

The primary issue is in `src/services/comfydeploy/PromptBuilder.js` in the `_finalizeRequest()` method (lines 243-456). This method is responsible for constructing the final API request to ComfyDeploy, but it has several problems:

1. It doesn't correctly prioritize user inputs over defaults
2. It has inconsistent handling of `input_` prefixed parameters
3. The input processing logic has multiple overlapping paths that can lead to data loss
4. The code attempts to track UI-requested inputs but doesn't consistently preserve them

## üõ†Ô∏è Implementation Requirements

Your task is to fix the `_finalizeRequest()` method to ensure user inputs are properly preserved. The fix should:

1. **Properly prioritize input sources**:
   - User-supplied values from the frontend UI should have highest priority
   - Direct parameters from the workflow request should be second priority
   - Default values should only be used when user inputs are not provided

2. **Handle parameter naming consistently**:
   - Both `input_` prefixed parameters and non-prefixed parameters should be handled consistently
   - Parameters should be normalized to the format expected by ComfyDeploy

3. **Add debug logging**:
   - Include logs that clearly show which inputs are being used and from what source
   - These logs should be removable after validation

4. **Simplify the logic**:
   - Remove redundant code paths that lead to confusion
   - Make the priority chain explicit and clear

## üìã Code Location & Details

### File to modify:
`src/services/comfydeploy/PromptBuilder.js`

### Method to fix:
`_finalizeRequest(promptObj)` (lines 243-456)

### Input data shape:
- `promptObj.settings.inputs`: Direct user inputs from the frontend
- `promptObj.settings`: Other parameters from the workflow execution request
- `promptObj[input_*]`: Direct input parameters on the promptObj itself

### Expected Output:
The method should return:
```js
{
  deployment_id: deploymentId,
  inputs: finalInputs,       // This should contain all the user inputs correctly
  originalPrompt: promptObj,
  inputDecisions            // For debugging
}
```

## üí° Implementation Guidance

1. Start by consolidating all possible input sources into a clear priority order
2. Create a single cohesive algorithm that processes inputs in that priority order
3. Normalize all parameter names to include the `input_` prefix if required
4. Add detailed logging for troubleshooting

## üö´ Constraints

1. Do not modify other methods in the file
2. Do not change the method signature or return format
3. Ensure backward compatibility with existing code that uses this method
4. Do not remove existing functionality, only fix the prioritization and preservation of inputs

## üß™ Testing Validation

After implementation, the code should ensure that:
1. Workflows are selectable and editable via frontend
2. Modified parameters persist through backend logic
3. Final request to ComfyDeploy reflects user input accurately
4. Response is displayed correctly to the user

## üìä Example

When a user sets `input_steps: 50` in the frontend UI, that value should be preserved all the way through to the final API request, even if there are default values or other sources trying to set that parameter to a different value. 